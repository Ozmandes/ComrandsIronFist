[gd_resource type="VisualShader" load_steps=13 format=3 uid="uid://b6nawxp4cgg5o"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_a2wmq"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeProximityFade" id="VisualShaderNodeProximityFade_a2wmq"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_d7cpd"]
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_a2wmq"]
constant = 0.1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_d7cpd"]
input_name = "normal"

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_8ftwj"]

[sub_resource type="VisualShaderNodeFresnel" id="VisualShaderNodeFresnel_ovbbm"]
default_input_values = [2, true, 3, 1.0]

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_d7cpd"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_8ftwj"]
constant = 0.1

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_ovbbm"]

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_krfi0"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0, 0, 0), 2, Vector3(1, 1, 1)]
op_type = 4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_rd5gr"]
constant = 1.0

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D depth_tex_frg_3 : hint_depth_texture;



void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;
	float n_out2p4 = n_out2p0.a;


	float n_out3p0;
// ProximityFade:3
	float n_in3p0 = 1.00000;
	{
		float __depth_tex = texture(depth_tex_frg_3, SCREEN_UV).r;
		vec4 __depth_world_pos = INV_PROJECTION_MATRIX * vec4(SCREEN_UV * 2.0 - 1.0, __depth_tex, 1.0);
		__depth_world_pos.xyz /= __depth_world_pos.w;
		n_out3p0 = clamp(1.0 - smoothstep(__depth_world_pos.z + n_in3p0, __depth_world_pos.z, VERTEX.z), 0.0, 1.0);
	}


// FloatOp:4
	float n_out4p0 = n_out3p0 * n_out2p4;


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);
	ALPHA = n_out4p0;


}

void light() {
// FloatConstant:7
	float n_out7p0 = 0.000000;


// FloatConstant:6
	float n_out6p0 = 0.100000;


// Input:2
	vec3 n_out2p0 = NORMAL;


// Fresnel:4
	float n_in4p3 = 1.00000;
	float n_out4p0 = pow(clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in4p3);


// DotProduct:3
	float n_out3p0 = dot(n_out2p0, vec3(n_out4p0));


// SmoothStep:5
	float n_out5p0 = smoothstep(n_out7p0, n_out6p0, n_out3p0);


// FloatConstant:10
	float n_out10p0 = 0.100000;


// FloatConstant:9
	float n_out9p0 = 1.000000;


// Clamp:8
	vec3 n_out8p0 = clamp(vec3(n_out5p0), vec3(n_out10p0), vec3(n_out9p0));


// Output:0
	DIFFUSE_LIGHT = n_out8p0;


}
"
nodes/vertex/0/position = Vector2(840, 220)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_a2wmq")
nodes/fragment/2/position = Vector2(-460, 80)
nodes/fragment/3/node = SubResource("VisualShaderNodeProximityFade_a2wmq")
nodes/fragment/3/position = Vector2(-420, 580)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatOp_d7cpd")
nodes/fragment/4/position = Vector2(60, 360)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 2, 4, 4, 1, 3, 0, 4, 0, 4, 0, 0, 1)
nodes/light/0/position = Vector2(1440, -100)
nodes/light/2/node = SubResource("VisualShaderNodeInput_d7cpd")
nodes/light/2/position = Vector2(-220, 80)
nodes/light/3/node = SubResource("VisualShaderNodeDotProduct_8ftwj")
nodes/light/3/position = Vector2(220, 120)
nodes/light/4/node = SubResource("VisualShaderNodeFresnel_ovbbm")
nodes/light/4/position = Vector2(-220, 320)
nodes/light/5/node = SubResource("VisualShaderNodeSmoothStep_d7cpd")
nodes/light/5/position = Vector2(580, -180)
nodes/light/6/node = SubResource("VisualShaderNodeFloatConstant_8ftwj")
nodes/light/6/position = Vector2(140, -160)
nodes/light/7/node = SubResource("VisualShaderNodeFloatConstant_ovbbm")
nodes/light/7/position = Vector2(120, -400)
nodes/light/8/node = SubResource("VisualShaderNodeClamp_krfi0")
nodes/light/8/position = Vector2(980, 320)
nodes/light/9/node = SubResource("VisualShaderNodeFloatConstant_rd5gr")
nodes/light/9/position = Vector2(560, 580)
nodes/light/10/node = SubResource("VisualShaderNodeFloatConstant_a2wmq")
nodes/light/10/position = Vector2(540, 340)
nodes/light/connections = PackedInt32Array(2, 0, 3, 0, 4, 0, 3, 1, 3, 0, 5, 2, 6, 0, 5, 1, 7, 0, 5, 0, 5, 0, 8, 0, 10, 0, 8, 1, 9, 0, 8, 2, 8, 0, 0, 0)
